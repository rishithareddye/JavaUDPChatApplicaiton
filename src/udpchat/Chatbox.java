
package udpchat;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import javax.swing.JOptionPane;

/**
 *
 * @author MadhusudhanReddy
 */
public class Chatbox extends javax.swing.JFrame {

    public static String name;
    public static String groupname;
    public static int gid;
    public static String INET_ADDR = "224.0.0.3";
    public static int PORT = 8888;
    

    /**
     * Creates new form Chatbox
     */
    public Chatbox() {
        initComponents();
        this.invokeReceiveThread(); // multicast receiver thread 
			 initEnter(); // thread used to connect enter button to submit button
        this.Receive.setText("You Have Joined The group");
        this.setResizable(false);
        Function.UDPclient("Online&8:" + gid + ":Refresh:");
        this.SendMsg.requestFocus();
    }
    /*
    initEnter method is used to connect enter button to jButton
    */
private void initEnter() {
	   SendMsg.addActionListener(new java.awt.event.ActionListener() {
           public void actionPerformed(java.awt.event.ActionEvent evt) {
               // TODO Auto-generated catch block
               
               jButton3ActionPerformed(evt);
           }
       });
   }
/*
    initEnter method used to start receiver for group.
    */
    public class Receiver implements Runnable {

        @Override
        public void run() {
            System.out.println(INET_ADDR + "here");
            while (true) {
                try {
                    InetAddress address = InetAddress.getByName(INET_ADDR);

                    // Create a buffer of bytes, which will be used to store
                    // the incoming bytes containing the information from the server.
                    // Since the message is small here, 256 bytes should be enough.
                    byte[] buf = new byte[256];

                    // Create a new Multicast socket (that will allow other sockets/programs
                    // to join it as well.
                    try (MulticastSocket clientSocket = new MulticastSocket(PORT)) {
                        //Joint the Multicast group.
                        clientSocket.joinGroup(address);

                        DatagramPacket msgPacket = new DatagramPacket(buf, buf.length);
                        clientSocket.receive(msgPacket);

                        String msg = new String(buf, 0, buf.length);
                        if (!msg.startsWith("Refresh&8")) {
                            Chatbox.Receive.append("\n");
                            String[] parts = msg.split(":");
                            for (int k = 0; k < parts.length; k++) {
                               
                                
                                      Chatbox.Receive.append(parts[k]);
                                       if(k==0 && parts.length>1){
                                 Chatbox.Receive.append(":");
                                 }
                               // Chatbox.Receive.append(parts[k]);
                            }
                            System.out.println(msg + "\n");
                        }
                        if (msg.startsWith("Refresh&8")) {
                            Chatbox.jTextArea1.setText("");
                            String[] parts = msg.split(":");
                            Chatbox.jTextArea1.append(parts[1] + "\n");
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                } catch (Exception iex) {

                }
            }

        }

    }
/* 
  thread meathod to start receiver  
    */
    public void invokeReceiveThread() {
        Thread Receiver = new Thread(new Receiver());
        if (!Receiver.isAlive()) {
            Receiver.start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MsgBox = new javax.swing.JScrollPane();
        Receive = new javax.swing.JTextArea();
        SendMsg = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Receive.setEditable(false);
        Receive.setColumns(20);
        Receive.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        Receive.setRows(5);
        MsgBox.setViewportView(Receive);

        SendMsg.setText("Enter Message");
        SendMsg.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                SendMsgMouseDragged(evt);
            }
        });
        SendMsg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendMsgMouseClicked(evt);
            }
        });

        jButton3.setText("Send");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Chat Box");

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MsgBox, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addComponent(SendMsg))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(162, 162, 162))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MsgBox)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SendMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!SendMsg.getText().equals("") && !SendMsg.getText().equals("Enter Message")) { // send msg to group
            Function.UDPclient("msg*9:" + gid + ":" + name + ":" + SendMsg.getText() + ":");
            System.out.println("msg*9:" + gid + ":" + name + ":" + SendMsg.getText() + ":");
            SendMsg.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void SendMsgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendMsgMouseClicked
        // TODO add your handling code here:
        
            this.SendMsg.setText("");
    }//GEN-LAST:event_SendMsgMouseClicked

    private void SendMsgMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendMsgMouseDragged
        // TODO add your handling code here:
        if (SendMsg.getText().equals("") || SendMsg.getText().equals("Enter Message")) {
            this.SendMsg.setText("Enter Message");
        }
    }//GEN-LAST:event_SendMsgMouseDragged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.out.println(Function.UDPclient("Online&8:" + gid + ":Refresh:")); // request online users

    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING",
        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
              System.out.println(Function.UDPclient("Leave@7:" + gid+":"+ name + ":Leave:")); // close the chat application
    // yes option
} else {
    // no option
}
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chatbox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chatbox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chatbox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chatbox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chatbox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane MsgBox;
    public static javax.swing.JTextArea Receive;
    private javax.swing.JTextField SendMsg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
